{"version":3,"sources":["components/Login/Login.tsx"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","className","style","name","component","Input","type","placeholder","validate","required","loginCheckBox","src","formSummeryError","connect","state","isAuth","auth","login","props","to","loginBlock","formData","email","password","rememberMe","captcha"],"mappings":"wGAAA,uGA2BMA,EAAiBC,YAAsD,CAC3EC,KAAM,SADeD,EAhB4F,SAAC,GAAwC,IAAvCE,EAAsC,EAAtCA,aAAcC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACxI,OACE,0BAAMC,SAAUH,EAAcI,UAAWC,IAAMN,MAC7C,iCAAM,kBAAC,IAAD,CAAOO,KAAK,QAAQC,UAAWC,IAAOC,KAAK,OAAOC,YAAa,QAASC,SAAU,CAACC,QACzF,6BAAK,kBAAC,IAAD,CAAON,KAAK,WAAWC,UAAWC,IAAOC,KAAK,WAAWC,YAAa,WAAYC,SAAU,CAACC,QAClG,6BAAK,kBAAC,IAAD,CAAON,KAAK,aAAaC,UAAWC,IAAOC,KAAK,WAAWL,UAAWC,IAAMQ,gBAAjF,eAECX,GAAc,yBAAKY,IAAKZ,IACxBA,GAAe,iCAAM,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWC,IAAOC,KAAK,OAAOC,YAAa,qBAAsBC,SAAU,CAACC,QAEvHX,GAAS,yBAAKG,UAAWC,IAAMU,kBAAmBd,GAEnD,6BAAK,8CAiCKe,uBAPM,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBhB,WAAYe,EAAME,KAAKjB,cAIa,CAACkB,WAA3BJ,EAzBhB,SAAeK,GAKb,OAAIA,EAAMH,OACD,kBAAC,IAAD,CAAWI,GAAM,aAEnB,yBAAKlB,UAAWC,IAAMkB,YAC3B,qCACA,6DACA,wEACA,kEACA,0DACA,kBAAC1B,EAAD,CAAgBM,SAbD,SAACqB,GACpBH,EAAMD,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAYpC1B,WAAYmB,EAAMnB","file":"static/js/8.be80d219.chunk.js","sourcesContent":["import React from \"react\"\nimport { reduxForm, Field, InjectedFormProps } from \"redux-form\"\nimport {required} from \"../../util/Validator\"\nimport {Input} from \"../../common/FormControl/FormControl\"\nimport {connect} from \"react-redux\"\nimport {getCaptchaUrl, login} from \"../../redux/AuthReducer\"\nimport { Redirect } from \"react-router-dom\"\nimport style from \"../../common/FormControl/FormControl.module.css\"\n\n\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnPropsType> & LoginFormOwnPropsType> = ({handleSubmit, error, captchaUrl }) => {\n  return (\n    <form onSubmit={handleSubmit} className={style.form} >\n      <div> <Field name=\"email\" component={Input} type=\"text\" placeholder={\"Email\"} validate={[required]} /></div>\n      <div><Field name=\"password\" component={Input} type=\"password\" placeholder={\"Password\"} validate={[required]} /></div>\n      <div><Field name=\"rememberMe\" component={Input} type=\"checkbox\" className={style.loginCheckBox}/>Remember me</div>\n\n      {captchaUrl && <img src={captchaUrl} />}\n      {captchaUrl &&  <div> <Field name=\"captcha\" component={Input} type=\"text\" placeholder={\"Symbols from image\"} validate={[required]} /></div>}\n\n      {error && <div className={style.formSummeryError}>{error}</div>}\n\n      <div><button >Login</button></div>\n    </form>\n  )\n}\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnPropsType>({\n  form: 'login'\n})(LoginForm)\n\nfunction Login(props: any) {\n  const onSubmit = (formData:LoginFormValuesType )=> {\nprops.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n  }\n\n  if (props.isAuth) {\n    return <Redirect  to = {\"/profile\"}/>\n  }\n  return <div className={style.loginBlock}>\n    <h1>Login</h1>\n    <div>To log in get registeredhere</div>\n    <div>or use common test account credentials:</div>\n    <div>Email: Kozhevnikova1501@yandex.ru</div>\n    <div>Password: SocialNetworkTS</div>\n    <LoginReduxForm onSubmit ={onSubmit} captchaUrl={props.captchaUrl}/>\n  </div>\n}\n\nlet mapStateToProps = (state: any) => {\n  return {\n      isAuth: state.auth.isAuth,\n      captchaUrl: state.auth.captchaUrl\n  }\n}\n\nexport default  connect (mapStateToProps, {login}) (Login)\n\n//types\ntype LoginFormValuesType = {\n  email: string\n  password: string\n  rememberMe: boolean\n  captcha: string\n}\n\ntype LoginFormOwnPropsType = {\n  captchaUrl: string\n}"],"sourceRoot":""}