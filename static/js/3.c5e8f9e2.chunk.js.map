{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","assets/image/candies.jpg","components/Dialogs/Dialog/Dialog.tsx","components/Dialogs/Message/Message.tsx","components/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","Dialog","React","memo","props","className","style","dialog","to","id","activeClassName","active","name","Message","message","textMessage","maxLength50","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","Field","component","TextArea","type","placeholder","validate","required","AddMessageReduxForm","reduxForm","form","Dialogs","DialogElements","dialogs","map","key","MessageElements","messages","mainImage","backgroundImage","mainImg","dialogsContant","MainImageWrapper","title","dialogsWrapper","value","sendMessage","newMessage","compose","connect","state","dialogsPage","newMessageText","isAuth","auth","dispatch","sendMessageActionCreator","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,eAAiB,gCAAgC,QAAU,yBAAyB,SAAW,0BAA0B,eAAiB,kC,oBCA5JD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,0CCD3DD,EAAOC,QAAU,IAA0B,qC,wGCQ9BC,EAASC,IAAMC,MAAM,SAACC,GAC/B,OACI,yBAAKC,UAAWC,IAAMC,QAClB,kBAAC,IAAD,CAASC,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,IAAMK,QAASP,EAAMQ,U,kBCJ1EC,EAAUX,IAAMC,MAAM,SAACC,GAChC,OACI,yBAAKC,UAAWC,IAAMQ,SACjBV,EAAMW,gB,mCCLdC,EAAcC,YAAiB,IAEvBC,EAAiBhB,IAAMC,MAAM,SAACC,GACzC,OACE,0BAAMe,SAAUf,EAAMgB,cACpB,6BAAK,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,aAAaY,KAAK,OAAOC,YAAY,qBAAqBC,SAAU,CAACC,IAAUX,KAArH,KACA,6BAAK,qDAKEY,EAAsBC,YAAU,CAC3CC,KAAM,cAD2BD,CAEhCX,G,0BCDUa,EAAU7B,IAAMC,MAAM,SAACC,GAChC,IAAI4B,EAAiB5B,EAAM6B,QAAQC,KAAI,SAAC3B,GACpC,OAAO,kBAACN,EAAD,CAAQQ,GAAIF,EAAOE,GAAIG,KAAML,EAAOK,KAAMuB,IAAK5B,EAAOE,QAE7D2B,EAAkBhC,EAAMiC,SAASH,KAAI,SAACpB,GACtC,OAAO,kBAACD,EAAD,CAASE,YAAaD,EAAQC,YAAaN,GAAIK,EAAQL,QAM5D6B,EAAW,CACbC,gBAAgB,OAAD,OAASC,IAAT,MAEnB,OACI,yBAAKnC,UAAWC,IAAMmC,gBAElB,kBAACC,EAAA,EAAD,CAAkBJ,UAAYA,EAAWK,MAAM,YAC/C,yBAAKtC,UAAWC,IAAMsC,gBAClB,yBAAKvC,UAAWC,IAAM2B,SACjBD,GAEL,yBAAK3B,UAAWC,IAAM+B,UAClB,6BAAMD,GACN,kBAACR,EAAD,CAAqBT,SAhBlB,SAAC0B,GAChBzC,EAAM0C,YAAYD,EAAME,qB,kCCHjBC,sBACXC,aAjBkB,SAACC,GACnB,MAAO,CACHjB,QAASiB,EAAMC,YAAYlB,QAC3BI,SAAUa,EAAMC,YAAYd,SAC5Be,eAAgBF,EAAME,eACtBC,OAAQH,EAAMI,KAAKD,WAGF,SAACE,GACtB,MAAO,CACHT,YAAa,SAACC,GACVQ,EAASC,YAAyBT,SAO1CU,IAFWT,CAGZjB","file":"static/js/3.c5e8f9e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsContant\":\"Dialogs_dialogsContant__1cBjI\",\"dialogs\":\"Dialogs_dialogs__3Miwg\",\"messages\":\"Dialogs_messages__2PocV\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__3xyEh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1mkTA\",\"active\":\"Dialog_active__35qww\"};","module.exports = __webpack_public_path__ + \"static/media/candies.7a7ab748.jpg\";","import React from \"react\"\nimport style from \"./Dialog.module.css\"\nimport {NavLink} from \"react-router-dom\"\n\ntype DialogPropsType = {\n    name:string\n    id:number\n}\nexport const Dialog = React.memo ((props:DialogPropsType) => {\n    return (\n        <div className={style.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id} activeClassName={style.active}>{props.name}</NavLink>\n        </div>\n\n    )}\n)","import React from \"react\"\nimport style from \"./Message.module.css\"\n\ntype MessagePropsType = {\n    textMessage: string\n    id:number\n}\nexport const Message = React.memo ((props:MessagePropsType) => {\n    return (\n        <div className={style.message}>\n            {props.textMessage}\n        </div>\n    )}\n)","import React from \"react\"\nimport { reduxForm, Field } from \"redux-form\"\nimport {required, maxLengthCreator} from \"../../util/Validator\"\nimport {TextArea} from \"../../common/FormControl/FormControl\"\n\n let maxLength50 = maxLengthCreator(50)\n\nexport const AddMessageForm = React.memo ((props: any) => { \n  return (\n    <form onSubmit={props.handleSubmit} >\n      <div><Field component={TextArea} name=\"newMessage\" type=\"text\" placeholder=\"Enter your message\" validate={[required, maxLength50 ]}/> </div>\n      <div><button>Send message</button></div>\n    </form>\n  )\n}\n)\nexport const AddMessageReduxForm = reduxForm({\n  form: \"newMessage\"\n})(AddMessageForm)\n\n\n","import React from \"react\";\nimport style from \"./Dialogs.module.css\";\nimport {Dialog} from \"./Dialog/Dialog\";\nimport {Message} from \"./Message/Message\";\nimport {MessagesPropsType, DialogArrayPropsType} from \"../../redux/Store\";\nimport {AddMessageReduxForm} from \"../AddMessageForm/AddMessageForm\";\nimport mainImg from \"../../assets/image/candies.jpg\"\nimport { MainImageWrapper } from \"../../common/MainImageWrapper/MainImageWrapper\";\n\ntype DialogsPropsType = {\n    sendMessage: (newMessage: any)=> void\n    changeMessage: (messageText:string)=> void\n    newMessageText: string\n    dialogs: Array<DialogArrayPropsType>\n    messages: Array<MessagesPropsType>\n}\n\nexport const Dialogs = React.memo ((props:DialogsPropsType) => {\n    let DialogElements = props.dialogs.map((dialog: DialogArrayPropsType) => {\n        return <Dialog id={dialog.id} name={dialog.name} key={dialog.id}/>\n    })\n    let MessageElements = props.messages.map((message: MessagesPropsType) => {\n        return <Message textMessage={message.textMessage} id={message.id} />\n    })\n\n    const addMessage = (value: any) => {\n        props.sendMessage(value.newMessage)\n    }\n    const mainImage= {\n        backgroundImage: `url(${mainImg })`\n      };\n    return (\n        <div className={style.dialogsContant}>\n\n            <MainImageWrapper mainImage ={mainImage} title=\"Dialogs\"/>\n            <div className={style.dialogsWrapper}>\n                <div className={style.dialogs}>\n                    {DialogElements}\n                </div>\n                <div className={style.messages}>\n                    <div>{MessageElements}</div>\n                    <AddMessageReduxForm onSubmit={addMessage} />\n                </div>\n            </div>\n\n        </div>\n)}\n)","import React from \"react\"\nimport {Dialogs} from \"./Dialogs\"\nimport {sendMessageActionCreator} from \"../../redux/DialogsReducer\"\nimport {connect} from \"react-redux\"\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\"\nimport { compose } from \"redux\"\n\nlet mapStateToProps = (state: any) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.newMessageText,\n        isAuth: state.auth.isAuth\n    }\n}\nlet mapDispatchToProps = (dispatch: Function) => {\n    return {\n        sendMessage: (newMessage: any) => {\n            dispatch(sendMessageActionCreator(newMessage))\n        },       \n    }\n}\n\nexport default compose <React.ComponentType>(\n    connect (mapStateToProps,mapDispatchToProps ),    \n    withAuthRedirect \n )(Dialogs)\n"],"sourceRoot":""}